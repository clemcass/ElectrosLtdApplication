//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18449.
// 
#pragma warning disable 1591

namespace ElectrosLtdApplication.SmsServ {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Sms", Namespace="http://api.clickatell.com/soap/document_literal/webservice.php")]
    public partial class ClickatellSms : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback authOperationCompleted;
        
        private System.Threading.SendOrPostCallback pingOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendmsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback querymsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback delmsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback getbalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback routecoverageOperationCompleted;
        
        private System.Threading.SendOrPostCallback si_pushOperationCompleted;
        
        private System.Threading.SendOrPostCallback ind_pushOperationCompleted;
        
        private System.Threading.SendOrPostCallback token_payOperationCompleted;
        
        private System.Threading.SendOrPostCallback startbatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback senditemOperationCompleted;
        
        private System.Threading.SendOrPostCallback quicksendOperationCompleted;
        
        private System.Threading.SendOrPostCallback endbatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback getmsgchargeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ClickatellSms() {
            this.Url = global::ElectrosLtdApplication.Properties.Settings.Default.ElectrosLtdApplication_SmsServ_ClickatellSms;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event authCompletedEventHandler authCompleted;
        
        /// <remarks/>
        public event pingCompletedEventHandler pingCompleted;
        
        /// <remarks/>
        public event sendmsgCompletedEventHandler sendmsgCompleted;
        
        /// <remarks/>
        public event querymsgCompletedEventHandler querymsgCompleted;
        
        /// <remarks/>
        public event delmsgCompletedEventHandler delmsgCompleted;
        
        /// <remarks/>
        public event getbalanceCompletedEventHandler getbalanceCompleted;
        
        /// <remarks/>
        public event routecoverageCompletedEventHandler routecoverageCompleted;
        
        /// <remarks/>
        public event si_pushCompletedEventHandler si_pushCompleted;
        
        /// <remarks/>
        public event ind_pushCompletedEventHandler ind_pushCompleted;
        
        /// <remarks/>
        public event token_payCompletedEventHandler token_payCompleted;
        
        /// <remarks/>
        public event startbatchCompletedEventHandler startbatchCompleted;
        
        /// <remarks/>
        public event senditemCompletedEventHandler senditemCompleted;
        
        /// <remarks/>
        public event quicksendCompletedEventHandler quicksendCompleted;
        
        /// <remarks/>
        public event endbatchCompletedEventHandler endbatchCompleted;
        
        /// <remarks/>
        public event getmsgchargeCompletedEventHandler getmsgchargeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.clickatell.com/soap/document_literal/webservice.php/auth", RequestNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", ResponseNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string auth([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int api_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string user, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password) {
            object[] results = this.Invoke("auth", new object[] {
                        api_id,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void authAsync(int api_id, string user, string password) {
            this.authAsync(api_id, user, password, null);
        }
        
        /// <remarks/>
        public void authAsync(int api_id, string user, string password, object userState) {
            if ((this.authOperationCompleted == null)) {
                this.authOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthOperationCompleted);
            }
            this.InvokeAsync("auth", new object[] {
                        api_id,
                        user,
                        password}, this.authOperationCompleted, userState);
        }
        
        private void OnauthOperationCompleted(object arg) {
            if ((this.authCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authCompleted(this, new authCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.clickatell.com/soap/document_literal/webservice.php/ping", RequestNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", ResponseNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ping([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string session_id) {
            object[] results = this.Invoke("ping", new object[] {
                        session_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void pingAsync(string session_id) {
            this.pingAsync(session_id, null);
        }
        
        /// <remarks/>
        public void pingAsync(string session_id, object userState) {
            if ((this.pingOperationCompleted == null)) {
                this.pingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpingOperationCompleted);
            }
            this.InvokeAsync("ping", new object[] {
                        session_id}, this.pingOperationCompleted, userState);
        }
        
        private void OnpingOperationCompleted(object arg) {
            if ((this.pingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pingCompleted(this, new pingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.clickatell.com/soap/document_literal/webservice.php/sendmsg", RequestNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", ResponseNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] sendmsg(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string session_id, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int api_id, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool api_idSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string user, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string text, 
                    [System.Xml.Serialization.XmlElementAttribute("to", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] to, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string from, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int concat, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool concatSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int msg_callback, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool msg_callbackSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int deliv_ack, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool deliv_ackSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int deliv_time, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool deliv_timeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int max_credits, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool max_creditsSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int req_feat, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool req_featSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int queue, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool queueSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int escalate, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool escalateSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int mo, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool moSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string climsgid, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int unicode, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool unicodeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string msg_type, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string udh, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string data, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int validity, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool validitySpecified) {
            object[] results = this.Invoke("sendmsg", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        text,
                        to,
                        from,
                        concat,
                        concatSpecified,
                        msg_callback,
                        msg_callbackSpecified,
                        deliv_ack,
                        deliv_ackSpecified,
                        deliv_time,
                        deliv_timeSpecified,
                        max_credits,
                        max_creditsSpecified,
                        req_feat,
                        req_featSpecified,
                        queue,
                        queueSpecified,
                        escalate,
                        escalateSpecified,
                        mo,
                        moSpecified,
                        climsgid,
                        unicode,
                        unicodeSpecified,
                        msg_type,
                        udh,
                        data,
                        validity,
                        validitySpecified});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void sendmsgAsync(
                    string session_id, 
                    int api_id, 
                    bool api_idSpecified, 
                    string user, 
                    string password, 
                    string text, 
                    string[] to, 
                    string from, 
                    int concat, 
                    bool concatSpecified, 
                    int msg_callback, 
                    bool msg_callbackSpecified, 
                    int deliv_ack, 
                    bool deliv_ackSpecified, 
                    int deliv_time, 
                    bool deliv_timeSpecified, 
                    int max_credits, 
                    bool max_creditsSpecified, 
                    int req_feat, 
                    bool req_featSpecified, 
                    int queue, 
                    bool queueSpecified, 
                    int escalate, 
                    bool escalateSpecified, 
                    int mo, 
                    bool moSpecified, 
                    string climsgid, 
                    int unicode, 
                    bool unicodeSpecified, 
                    string msg_type, 
                    string udh, 
                    string data, 
                    int validity, 
                    bool validitySpecified) {
            this.sendmsgAsync(session_id, api_id, api_idSpecified, user, password, text, to, from, concat, concatSpecified, msg_callback, msg_callbackSpecified, deliv_ack, deliv_ackSpecified, deliv_time, deliv_timeSpecified, max_credits, max_creditsSpecified, req_feat, req_featSpecified, queue, queueSpecified, escalate, escalateSpecified, mo, moSpecified, climsgid, unicode, unicodeSpecified, msg_type, udh, data, validity, validitySpecified, null);
        }
        
        /// <remarks/>
        public void sendmsgAsync(
                    string session_id, 
                    int api_id, 
                    bool api_idSpecified, 
                    string user, 
                    string password, 
                    string text, 
                    string[] to, 
                    string from, 
                    int concat, 
                    bool concatSpecified, 
                    int msg_callback, 
                    bool msg_callbackSpecified, 
                    int deliv_ack, 
                    bool deliv_ackSpecified, 
                    int deliv_time, 
                    bool deliv_timeSpecified, 
                    int max_credits, 
                    bool max_creditsSpecified, 
                    int req_feat, 
                    bool req_featSpecified, 
                    int queue, 
                    bool queueSpecified, 
                    int escalate, 
                    bool escalateSpecified, 
                    int mo, 
                    bool moSpecified, 
                    string climsgid, 
                    int unicode, 
                    bool unicodeSpecified, 
                    string msg_type, 
                    string udh, 
                    string data, 
                    int validity, 
                    bool validitySpecified, 
                    object userState) {
            if ((this.sendmsgOperationCompleted == null)) {
                this.sendmsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendmsgOperationCompleted);
            }
            this.InvokeAsync("sendmsg", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        text,
                        to,
                        from,
                        concat,
                        concatSpecified,
                        msg_callback,
                        msg_callbackSpecified,
                        deliv_ack,
                        deliv_ackSpecified,
                        deliv_time,
                        deliv_timeSpecified,
                        max_credits,
                        max_creditsSpecified,
                        req_feat,
                        req_featSpecified,
                        queue,
                        queueSpecified,
                        escalate,
                        escalateSpecified,
                        mo,
                        moSpecified,
                        climsgid,
                        unicode,
                        unicodeSpecified,
                        msg_type,
                        udh,
                        data,
                        validity,
                        validitySpecified}, this.sendmsgOperationCompleted, userState);
        }
        
        private void OnsendmsgOperationCompleted(object arg) {
            if ((this.sendmsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendmsgCompleted(this, new sendmsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.clickatell.com/soap/document_literal/webservice.php/querymsg", RequestNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", ResponseNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string querymsg([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string session_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int api_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool api_idSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string user, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string apimsgid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string climsgid) {
            object[] results = this.Invoke("querymsg", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        apimsgid,
                        climsgid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void querymsgAsync(string session_id, int api_id, bool api_idSpecified, string user, string password, string apimsgid, string climsgid) {
            this.querymsgAsync(session_id, api_id, api_idSpecified, user, password, apimsgid, climsgid, null);
        }
        
        /// <remarks/>
        public void querymsgAsync(string session_id, int api_id, bool api_idSpecified, string user, string password, string apimsgid, string climsgid, object userState) {
            if ((this.querymsgOperationCompleted == null)) {
                this.querymsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnquerymsgOperationCompleted);
            }
            this.InvokeAsync("querymsg", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        apimsgid,
                        climsgid}, this.querymsgOperationCompleted, userState);
        }
        
        private void OnquerymsgOperationCompleted(object arg) {
            if ((this.querymsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.querymsgCompleted(this, new querymsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.clickatell.com/soap/document_literal/webservice.php/delmsg", RequestNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", ResponseNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string delmsg([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string session_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int api_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool api_idSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string user, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string apimsgid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string climsgid) {
            object[] results = this.Invoke("delmsg", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        apimsgid,
                        climsgid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void delmsgAsync(string session_id, int api_id, bool api_idSpecified, string user, string password, string apimsgid, string climsgid) {
            this.delmsgAsync(session_id, api_id, api_idSpecified, user, password, apimsgid, climsgid, null);
        }
        
        /// <remarks/>
        public void delmsgAsync(string session_id, int api_id, bool api_idSpecified, string user, string password, string apimsgid, string climsgid, object userState) {
            if ((this.delmsgOperationCompleted == null)) {
                this.delmsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OndelmsgOperationCompleted);
            }
            this.InvokeAsync("delmsg", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        apimsgid,
                        climsgid}, this.delmsgOperationCompleted, userState);
        }
        
        private void OndelmsgOperationCompleted(object arg) {
            if ((this.delmsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.delmsgCompleted(this, new delmsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.clickatell.com/soap/document_literal/webservice.php/getbalance", RequestNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", ResponseNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getbalance([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string session_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int api_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool api_idSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string user, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password) {
            object[] results = this.Invoke("getbalance", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getbalanceAsync(string session_id, int api_id, bool api_idSpecified, string user, string password) {
            this.getbalanceAsync(session_id, api_id, api_idSpecified, user, password, null);
        }
        
        /// <remarks/>
        public void getbalanceAsync(string session_id, int api_id, bool api_idSpecified, string user, string password, object userState) {
            if ((this.getbalanceOperationCompleted == null)) {
                this.getbalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetbalanceOperationCompleted);
            }
            this.InvokeAsync("getbalance", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password}, this.getbalanceOperationCompleted, userState);
        }
        
        private void OngetbalanceOperationCompleted(object arg) {
            if ((this.getbalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getbalanceCompleted(this, new getbalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.clickatell.com/soap/document_literal/webservice.php/routecoverage", RequestNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", ResponseNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string routecoverage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string session_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int api_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool api_idSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string user, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string msisdn) {
            object[] results = this.Invoke("routecoverage", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        msisdn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void routecoverageAsync(string session_id, int api_id, bool api_idSpecified, string user, string password, string msisdn) {
            this.routecoverageAsync(session_id, api_id, api_idSpecified, user, password, msisdn, null);
        }
        
        /// <remarks/>
        public void routecoverageAsync(string session_id, int api_id, bool api_idSpecified, string user, string password, string msisdn, object userState) {
            if ((this.routecoverageOperationCompleted == null)) {
                this.routecoverageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnroutecoverageOperationCompleted);
            }
            this.InvokeAsync("routecoverage", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        msisdn}, this.routecoverageOperationCompleted, userState);
        }
        
        private void OnroutecoverageOperationCompleted(object arg) {
            if ((this.routecoverageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.routecoverageCompleted(this, new routecoverageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.clickatell.com/soap/document_literal/webservice.php/si_push", RequestNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", ResponseNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] si_push(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string session_id, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int api_id, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool api_idSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string user, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, 
                    [System.Xml.Serialization.XmlElementAttribute("to", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] to, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string si_id, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string si_url, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string si_text, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string si_created, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string si_expires, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string si_action, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string from, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int concat, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool concatSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int deliv_ack, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool deliv_ackSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int msg_callback, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool msg_callbackSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int deliv_time, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool deliv_timeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int max_credits, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool max_creditsSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int req_feat, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool req_featSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int queue, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool queueSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int escalate, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool escalateSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int mo, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool moSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string climsgid, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int unicode, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool unicodeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int validity, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool validitySpecified) {
            object[] results = this.Invoke("si_push", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        to,
                        si_id,
                        si_url,
                        si_text,
                        si_created,
                        si_expires,
                        si_action,
                        from,
                        concat,
                        concatSpecified,
                        deliv_ack,
                        deliv_ackSpecified,
                        msg_callback,
                        msg_callbackSpecified,
                        deliv_time,
                        deliv_timeSpecified,
                        max_credits,
                        max_creditsSpecified,
                        req_feat,
                        req_featSpecified,
                        queue,
                        queueSpecified,
                        escalate,
                        escalateSpecified,
                        mo,
                        moSpecified,
                        climsgid,
                        unicode,
                        unicodeSpecified,
                        validity,
                        validitySpecified});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void si_pushAsync(
                    string session_id, 
                    int api_id, 
                    bool api_idSpecified, 
                    string user, 
                    string password, 
                    string[] to, 
                    string si_id, 
                    string si_url, 
                    string si_text, 
                    string si_created, 
                    string si_expires, 
                    string si_action, 
                    string from, 
                    int concat, 
                    bool concatSpecified, 
                    int deliv_ack, 
                    bool deliv_ackSpecified, 
                    int msg_callback, 
                    bool msg_callbackSpecified, 
                    int deliv_time, 
                    bool deliv_timeSpecified, 
                    int max_credits, 
                    bool max_creditsSpecified, 
                    int req_feat, 
                    bool req_featSpecified, 
                    int queue, 
                    bool queueSpecified, 
                    int escalate, 
                    bool escalateSpecified, 
                    int mo, 
                    bool moSpecified, 
                    string climsgid, 
                    int unicode, 
                    bool unicodeSpecified, 
                    int validity, 
                    bool validitySpecified) {
            this.si_pushAsync(session_id, api_id, api_idSpecified, user, password, to, si_id, si_url, si_text, si_created, si_expires, si_action, from, concat, concatSpecified, deliv_ack, deliv_ackSpecified, msg_callback, msg_callbackSpecified, deliv_time, deliv_timeSpecified, max_credits, max_creditsSpecified, req_feat, req_featSpecified, queue, queueSpecified, escalate, escalateSpecified, mo, moSpecified, climsgid, unicode, unicodeSpecified, validity, validitySpecified, null);
        }
        
        /// <remarks/>
        public void si_pushAsync(
                    string session_id, 
                    int api_id, 
                    bool api_idSpecified, 
                    string user, 
                    string password, 
                    string[] to, 
                    string si_id, 
                    string si_url, 
                    string si_text, 
                    string si_created, 
                    string si_expires, 
                    string si_action, 
                    string from, 
                    int concat, 
                    bool concatSpecified, 
                    int deliv_ack, 
                    bool deliv_ackSpecified, 
                    int msg_callback, 
                    bool msg_callbackSpecified, 
                    int deliv_time, 
                    bool deliv_timeSpecified, 
                    int max_credits, 
                    bool max_creditsSpecified, 
                    int req_feat, 
                    bool req_featSpecified, 
                    int queue, 
                    bool queueSpecified, 
                    int escalate, 
                    bool escalateSpecified, 
                    int mo, 
                    bool moSpecified, 
                    string climsgid, 
                    int unicode, 
                    bool unicodeSpecified, 
                    int validity, 
                    bool validitySpecified, 
                    object userState) {
            if ((this.si_pushOperationCompleted == null)) {
                this.si_pushOperationCompleted = new System.Threading.SendOrPostCallback(this.Onsi_pushOperationCompleted);
            }
            this.InvokeAsync("si_push", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        to,
                        si_id,
                        si_url,
                        si_text,
                        si_created,
                        si_expires,
                        si_action,
                        from,
                        concat,
                        concatSpecified,
                        deliv_ack,
                        deliv_ackSpecified,
                        msg_callback,
                        msg_callbackSpecified,
                        deliv_time,
                        deliv_timeSpecified,
                        max_credits,
                        max_creditsSpecified,
                        req_feat,
                        req_featSpecified,
                        queue,
                        queueSpecified,
                        escalate,
                        escalateSpecified,
                        mo,
                        moSpecified,
                        climsgid,
                        unicode,
                        unicodeSpecified,
                        validity,
                        validitySpecified}, this.si_pushOperationCompleted, userState);
        }
        
        private void Onsi_pushOperationCompleted(object arg) {
            if ((this.si_pushCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.si_pushCompleted(this, new si_pushCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.clickatell.com/soap/document_literal/webservice.php/ind_push", RequestNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", ResponseNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] ind_push(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string session_id, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int api_id, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool api_idSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string user, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, 
                    [System.Xml.Serialization.XmlElementAttribute("to", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] to, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string mms_subject, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string mms_class, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string mms_expire, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string mms_from, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string mms_url, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string from, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int concat, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool concatSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int deliv_ack, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool deliv_ackSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int msg_callback, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool msg_callbackSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int deliv_time, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool deliv_timeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int max_credits, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool max_creditsSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int req_feat, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool req_featSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int queue, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool queueSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int escalate, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool escalateSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int mo, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool moSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string climsgid, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int validity, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool validitySpecified) {
            object[] results = this.Invoke("ind_push", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        to,
                        mms_subject,
                        mms_class,
                        mms_expire,
                        mms_from,
                        mms_url,
                        from,
                        concat,
                        concatSpecified,
                        deliv_ack,
                        deliv_ackSpecified,
                        msg_callback,
                        msg_callbackSpecified,
                        deliv_time,
                        deliv_timeSpecified,
                        max_credits,
                        max_creditsSpecified,
                        req_feat,
                        req_featSpecified,
                        queue,
                        queueSpecified,
                        escalate,
                        escalateSpecified,
                        mo,
                        moSpecified,
                        climsgid,
                        validity,
                        validitySpecified});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ind_pushAsync(
                    string session_id, 
                    int api_id, 
                    bool api_idSpecified, 
                    string user, 
                    string password, 
                    string[] to, 
                    string mms_subject, 
                    string mms_class, 
                    string mms_expire, 
                    string mms_from, 
                    string mms_url, 
                    string from, 
                    int concat, 
                    bool concatSpecified, 
                    int deliv_ack, 
                    bool deliv_ackSpecified, 
                    int msg_callback, 
                    bool msg_callbackSpecified, 
                    int deliv_time, 
                    bool deliv_timeSpecified, 
                    int max_credits, 
                    bool max_creditsSpecified, 
                    int req_feat, 
                    bool req_featSpecified, 
                    int queue, 
                    bool queueSpecified, 
                    int escalate, 
                    bool escalateSpecified, 
                    int mo, 
                    bool moSpecified, 
                    string climsgid, 
                    int validity, 
                    bool validitySpecified) {
            this.ind_pushAsync(session_id, api_id, api_idSpecified, user, password, to, mms_subject, mms_class, mms_expire, mms_from, mms_url, from, concat, concatSpecified, deliv_ack, deliv_ackSpecified, msg_callback, msg_callbackSpecified, deliv_time, deliv_timeSpecified, max_credits, max_creditsSpecified, req_feat, req_featSpecified, queue, queueSpecified, escalate, escalateSpecified, mo, moSpecified, climsgid, validity, validitySpecified, null);
        }
        
        /// <remarks/>
        public void ind_pushAsync(
                    string session_id, 
                    int api_id, 
                    bool api_idSpecified, 
                    string user, 
                    string password, 
                    string[] to, 
                    string mms_subject, 
                    string mms_class, 
                    string mms_expire, 
                    string mms_from, 
                    string mms_url, 
                    string from, 
                    int concat, 
                    bool concatSpecified, 
                    int deliv_ack, 
                    bool deliv_ackSpecified, 
                    int msg_callback, 
                    bool msg_callbackSpecified, 
                    int deliv_time, 
                    bool deliv_timeSpecified, 
                    int max_credits, 
                    bool max_creditsSpecified, 
                    int req_feat, 
                    bool req_featSpecified, 
                    int queue, 
                    bool queueSpecified, 
                    int escalate, 
                    bool escalateSpecified, 
                    int mo, 
                    bool moSpecified, 
                    string climsgid, 
                    int validity, 
                    bool validitySpecified, 
                    object userState) {
            if ((this.ind_pushOperationCompleted == null)) {
                this.ind_pushOperationCompleted = new System.Threading.SendOrPostCallback(this.Onind_pushOperationCompleted);
            }
            this.InvokeAsync("ind_push", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        to,
                        mms_subject,
                        mms_class,
                        mms_expire,
                        mms_from,
                        mms_url,
                        from,
                        concat,
                        concatSpecified,
                        deliv_ack,
                        deliv_ackSpecified,
                        msg_callback,
                        msg_callbackSpecified,
                        deliv_time,
                        deliv_timeSpecified,
                        max_credits,
                        max_creditsSpecified,
                        req_feat,
                        req_featSpecified,
                        queue,
                        queueSpecified,
                        escalate,
                        escalateSpecified,
                        mo,
                        moSpecified,
                        climsgid,
                        validity,
                        validitySpecified}, this.ind_pushOperationCompleted, userState);
        }
        
        private void Onind_pushOperationCompleted(object arg) {
            if ((this.ind_pushCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ind_pushCompleted(this, new ind_pushCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.clickatell.com/soap/document_literal/webservice.php/token_pay", RequestNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", ResponseNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] token_pay([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string session_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int api_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool api_idSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string user, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token) {
            object[] results = this.Invoke("token_pay", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        token});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void token_payAsync(string session_id, int api_id, bool api_idSpecified, string user, string password, string token) {
            this.token_payAsync(session_id, api_id, api_idSpecified, user, password, token, null);
        }
        
        /// <remarks/>
        public void token_payAsync(string session_id, int api_id, bool api_idSpecified, string user, string password, string token, object userState) {
            if ((this.token_payOperationCompleted == null)) {
                this.token_payOperationCompleted = new System.Threading.SendOrPostCallback(this.Ontoken_payOperationCompleted);
            }
            this.InvokeAsync("token_pay", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        token}, this.token_payOperationCompleted, userState);
        }
        
        private void Ontoken_payOperationCompleted(object arg) {
            if ((this.token_payCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.token_payCompleted(this, new token_payCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.clickatell.com/soap/document_literal/webservice.php/startbatch", RequestNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", ResponseNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startbatch(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string session_id, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int api_id, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool api_idSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string user, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string from, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int concat, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool concatSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string template, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int deliv_ack, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool deliv_ackSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int msg_callback, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool msg_callbackSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int deliv_time, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool deliv_timeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int max_credits, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool max_creditsSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int req_feat, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool req_featSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int queue, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool queueSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int escalate, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool escalateSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int mo, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool moSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string climsgid, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int unicode, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool unicodeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string msg_type, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string udh, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int validity, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool validitySpecified) {
            object[] results = this.Invoke("startbatch", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        from,
                        concat,
                        concatSpecified,
                        template,
                        deliv_ack,
                        deliv_ackSpecified,
                        msg_callback,
                        msg_callbackSpecified,
                        deliv_time,
                        deliv_timeSpecified,
                        max_credits,
                        max_creditsSpecified,
                        req_feat,
                        req_featSpecified,
                        queue,
                        queueSpecified,
                        escalate,
                        escalateSpecified,
                        mo,
                        moSpecified,
                        climsgid,
                        unicode,
                        unicodeSpecified,
                        msg_type,
                        udh,
                        validity,
                        validitySpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void startbatchAsync(
                    string session_id, 
                    int api_id, 
                    bool api_idSpecified, 
                    string user, 
                    string password, 
                    string from, 
                    int concat, 
                    bool concatSpecified, 
                    string template, 
                    int deliv_ack, 
                    bool deliv_ackSpecified, 
                    int msg_callback, 
                    bool msg_callbackSpecified, 
                    int deliv_time, 
                    bool deliv_timeSpecified, 
                    int max_credits, 
                    bool max_creditsSpecified, 
                    int req_feat, 
                    bool req_featSpecified, 
                    int queue, 
                    bool queueSpecified, 
                    int escalate, 
                    bool escalateSpecified, 
                    int mo, 
                    bool moSpecified, 
                    string climsgid, 
                    int unicode, 
                    bool unicodeSpecified, 
                    string msg_type, 
                    string udh, 
                    int validity, 
                    bool validitySpecified) {
            this.startbatchAsync(session_id, api_id, api_idSpecified, user, password, from, concat, concatSpecified, template, deliv_ack, deliv_ackSpecified, msg_callback, msg_callbackSpecified, deliv_time, deliv_timeSpecified, max_credits, max_creditsSpecified, req_feat, req_featSpecified, queue, queueSpecified, escalate, escalateSpecified, mo, moSpecified, climsgid, unicode, unicodeSpecified, msg_type, udh, validity, validitySpecified, null);
        }
        
        /// <remarks/>
        public void startbatchAsync(
                    string session_id, 
                    int api_id, 
                    bool api_idSpecified, 
                    string user, 
                    string password, 
                    string from, 
                    int concat, 
                    bool concatSpecified, 
                    string template, 
                    int deliv_ack, 
                    bool deliv_ackSpecified, 
                    int msg_callback, 
                    bool msg_callbackSpecified, 
                    int deliv_time, 
                    bool deliv_timeSpecified, 
                    int max_credits, 
                    bool max_creditsSpecified, 
                    int req_feat, 
                    bool req_featSpecified, 
                    int queue, 
                    bool queueSpecified, 
                    int escalate, 
                    bool escalateSpecified, 
                    int mo, 
                    bool moSpecified, 
                    string climsgid, 
                    int unicode, 
                    bool unicodeSpecified, 
                    string msg_type, 
                    string udh, 
                    int validity, 
                    bool validitySpecified, 
                    object userState) {
            if ((this.startbatchOperationCompleted == null)) {
                this.startbatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstartbatchOperationCompleted);
            }
            this.InvokeAsync("startbatch", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        from,
                        concat,
                        concatSpecified,
                        template,
                        deliv_ack,
                        deliv_ackSpecified,
                        msg_callback,
                        msg_callbackSpecified,
                        deliv_time,
                        deliv_timeSpecified,
                        max_credits,
                        max_creditsSpecified,
                        req_feat,
                        req_featSpecified,
                        queue,
                        queueSpecified,
                        escalate,
                        escalateSpecified,
                        mo,
                        moSpecified,
                        climsgid,
                        unicode,
                        unicodeSpecified,
                        msg_type,
                        udh,
                        validity,
                        validitySpecified}, this.startbatchOperationCompleted, userState);
        }
        
        private void OnstartbatchOperationCompleted(object arg) {
            if ((this.startbatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.startbatchCompleted(this, new startbatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.clickatell.com/soap/document_literal/webservice.php/senditem", RequestNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", ResponseNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] senditem(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string session_id, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int api_id, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool api_idSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string user, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string batch_id, 
                    [System.Xml.Serialization.XmlElementAttribute("to", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] to, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string field1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string field2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string field3, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string field4, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string field5, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string field6, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string field7, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string field8, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string field9, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string field10) {
            object[] results = this.Invoke("senditem", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        batch_id,
                        to,
                        field1,
                        field2,
                        field3,
                        field4,
                        field5,
                        field6,
                        field7,
                        field8,
                        field9,
                        field10});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void senditemAsync(
                    string session_id, 
                    int api_id, 
                    bool api_idSpecified, 
                    string user, 
                    string password, 
                    string batch_id, 
                    string[] to, 
                    string field1, 
                    string field2, 
                    string field3, 
                    string field4, 
                    string field5, 
                    string field6, 
                    string field7, 
                    string field8, 
                    string field9, 
                    string field10) {
            this.senditemAsync(session_id, api_id, api_idSpecified, user, password, batch_id, to, field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, null);
        }
        
        /// <remarks/>
        public void senditemAsync(
                    string session_id, 
                    int api_id, 
                    bool api_idSpecified, 
                    string user, 
                    string password, 
                    string batch_id, 
                    string[] to, 
                    string field1, 
                    string field2, 
                    string field3, 
                    string field4, 
                    string field5, 
                    string field6, 
                    string field7, 
                    string field8, 
                    string field9, 
                    string field10, 
                    object userState) {
            if ((this.senditemOperationCompleted == null)) {
                this.senditemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsenditemOperationCompleted);
            }
            this.InvokeAsync("senditem", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        batch_id,
                        to,
                        field1,
                        field2,
                        field3,
                        field4,
                        field5,
                        field6,
                        field7,
                        field8,
                        field9,
                        field10}, this.senditemOperationCompleted, userState);
        }
        
        private void OnsenditemOperationCompleted(object arg) {
            if ((this.senditemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.senditemCompleted(this, new senditemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.clickatell.com/soap/document_literal/webservice.php/quicksend", RequestNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", ResponseNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] quicksend([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string session_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int api_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool api_idSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string user, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string batch_id, [System.Xml.Serialization.XmlElementAttribute("to", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] to) {
            object[] results = this.Invoke("quicksend", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        batch_id,
                        to});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void quicksendAsync(string session_id, int api_id, bool api_idSpecified, string user, string password, string batch_id, string[] to) {
            this.quicksendAsync(session_id, api_id, api_idSpecified, user, password, batch_id, to, null);
        }
        
        /// <remarks/>
        public void quicksendAsync(string session_id, int api_id, bool api_idSpecified, string user, string password, string batch_id, string[] to, object userState) {
            if ((this.quicksendOperationCompleted == null)) {
                this.quicksendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnquicksendOperationCompleted);
            }
            this.InvokeAsync("quicksend", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        batch_id,
                        to}, this.quicksendOperationCompleted, userState);
        }
        
        private void OnquicksendOperationCompleted(object arg) {
            if ((this.quicksendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.quicksendCompleted(this, new quicksendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.clickatell.com/soap/document_literal/webservice.php/endbatch", RequestNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", ResponseNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endbatch([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string session_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int api_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool api_idSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string user, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string batch_id) {
            object[] results = this.Invoke("endbatch", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        batch_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void endbatchAsync(string session_id, int api_id, bool api_idSpecified, string user, string password, string batch_id) {
            this.endbatchAsync(session_id, api_id, api_idSpecified, user, password, batch_id, null);
        }
        
        /// <remarks/>
        public void endbatchAsync(string session_id, int api_id, bool api_idSpecified, string user, string password, string batch_id, object userState) {
            if ((this.endbatchOperationCompleted == null)) {
                this.endbatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnendbatchOperationCompleted);
            }
            this.InvokeAsync("endbatch", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        batch_id}, this.endbatchOperationCompleted, userState);
        }
        
        private void OnendbatchOperationCompleted(object arg) {
            if ((this.endbatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.endbatchCompleted(this, new endbatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.clickatell.com/soap/document_literal/webservice.php/getmsgcharge", RequestNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", ResponseNamespace="http://api.clickatell.com/soap/document_literal/webservice.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getmsgcharge([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string session_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int api_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool api_idSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string user, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string apimsgid) {
            object[] results = this.Invoke("getmsgcharge", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        apimsgid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getmsgchargeAsync(string session_id, int api_id, bool api_idSpecified, string user, string password, string apimsgid) {
            this.getmsgchargeAsync(session_id, api_id, api_idSpecified, user, password, apimsgid, null);
        }
        
        /// <remarks/>
        public void getmsgchargeAsync(string session_id, int api_id, bool api_idSpecified, string user, string password, string apimsgid, object userState) {
            if ((this.getmsgchargeOperationCompleted == null)) {
                this.getmsgchargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetmsgchargeOperationCompleted);
            }
            this.InvokeAsync("getmsgcharge", new object[] {
                        session_id,
                        api_id,
                        api_idSpecified,
                        user,
                        password,
                        apimsgid}, this.getmsgchargeOperationCompleted, userState);
        }
        
        private void OngetmsgchargeOperationCompleted(object arg) {
            if ((this.getmsgchargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getmsgchargeCompleted(this, new getmsgchargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void authCompletedEventHandler(object sender, authCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal authCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void pingCompletedEventHandler(object sender, pingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void sendmsgCompletedEventHandler(object sender, sendmsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendmsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendmsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void querymsgCompletedEventHandler(object sender, querymsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class querymsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal querymsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void delmsgCompletedEventHandler(object sender, delmsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class delmsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal delmsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getbalanceCompletedEventHandler(object sender, getbalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getbalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getbalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void routecoverageCompletedEventHandler(object sender, routecoverageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class routecoverageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal routecoverageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void si_pushCompletedEventHandler(object sender, si_pushCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class si_pushCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal si_pushCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ind_pushCompletedEventHandler(object sender, ind_pushCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ind_pushCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ind_pushCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void token_payCompletedEventHandler(object sender, token_payCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class token_payCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal token_payCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void startbatchCompletedEventHandler(object sender, startbatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class startbatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal startbatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void senditemCompletedEventHandler(object sender, senditemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class senditemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal senditemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void quicksendCompletedEventHandler(object sender, quicksendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class quicksendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal quicksendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void endbatchCompletedEventHandler(object sender, endbatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class endbatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal endbatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getmsgchargeCompletedEventHandler(object sender, getmsgchargeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getmsgchargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getmsgchargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591