//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElectrosLtdApplication.UserServ {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserServ.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/isAuthenticationValid", ReplyAction="http://tempuri.org/IUserService/isAuthenticationValidResponse")]
        bool isAuthenticationValid(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        void AddUser(Common.User person, int[] rolesList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUserByUsername", ReplyAction="http://tempuri.org/IUserService/getUserByUsernameResponse")]
        Common.User getUserByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserById", ReplyAction="http://tempuri.org/IUserService/GetUserByIdResponse")]
        Common.User GetUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getAllRoles", ReplyAction="http://tempuri.org/IUserService/getAllRolesResponse")]
        Common.Role[] getAllRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getRoleById", ReplyAction="http://tempuri.org/IUserService/getRoleByIdResponse")]
        Common.Role getRoleById(int roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Encrypt", ReplyAction="http://tempuri.org/IUserService/EncryptResponse")]
        string Encrypt(string password, string saltKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Decrypt", ReplyAction="http://tempuri.org/IUserService/DecryptResponse")]
        string Decrypt(string encryptedText, string saltKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllUsers", ReplyAction="http://tempuri.org/IUserService/GetAllUsersResponse")]
        Common.User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetEmail", ReplyAction="http://tempuri.org/IUserService/GetEmailResponse")]
        bool GetEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsername", ReplyAction="http://tempuri.org/IUserService/GetUsernameResponse")]
        bool GetUsername(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : ElectrosLtdApplication.UserServ.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<ElectrosLtdApplication.UserServ.IUserService>, ElectrosLtdApplication.UserServ.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool isAuthenticationValid(string username, string password) {
            return base.Channel.isAuthenticationValid(username, password);
        }
        
        public void AddUser(Common.User person, int[] rolesList) {
            base.Channel.AddUser(person, rolesList);
        }
        
        public Common.User getUserByUsername(string username) {
            return base.Channel.getUserByUsername(username);
        }
        
        public Common.User GetUserById(int id) {
            return base.Channel.GetUserById(id);
        }
        
        public Common.Role[] getAllRoles() {
            return base.Channel.getAllRoles();
        }
        
        public Common.Role getRoleById(int roleId) {
            return base.Channel.getRoleById(roleId);
        }
        
        public string Encrypt(string password, string saltKey) {
            return base.Channel.Encrypt(password, saltKey);
        }
        
        public string Decrypt(string encryptedText, string saltKey) {
            return base.Channel.Decrypt(encryptedText, saltKey);
        }
        
        public Common.User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public bool GetEmail(string email) {
            return base.Channel.GetEmail(email);
        }
        
        public bool GetUsername(string username) {
            return base.Channel.GetUsername(username);
        }
    }
}
