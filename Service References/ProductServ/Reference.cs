//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElectrosLtdApplication.ProductServ {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductServ.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProducts", ReplyAction="http://tempuri.org/IProductService/GetAllProductsResponse")]
        Common.Product[] GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductById", ReplyAction="http://tempuri.org/IProductService/GetProductByIdResponse")]
        Common.Product GetProductById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddRate", ReplyAction="http://tempuri.org/IProductService/AddRateResponse")]
        void AddRate(Common.Rate rate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllRateOfProduct", ReplyAction="http://tempuri.org/IProductService/GetAllRateOfProductResponse")]
        Common.Rate[] GetAllRateOfProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddProductForOrder", ReplyAction="http://tempuri.org/IProductService/AddProductForOrderResponse")]
        string AddProductForOrder(int productId, int qty, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetByText", ReplyAction="http://tempuri.org/IProductService/GetByTextResponse")]
        Common.Product[] GetByText(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetByPriceRange", ReplyAction="http://tempuri.org/IProductService/GetByPriceRangeResponse")]
        Common.Product[] GetByPriceRange(decimal to, decimal from);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetByDateListed", ReplyAction="http://tempuri.org/IProductService/GetByDateListedResponse")]
        Common.Product[] GetByDateListed(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllCategory", ReplyAction="http://tempuri.org/IProductService/GetAllCategoryResponse")]
        Common.Category[] GetAllCategory();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : ElectrosLtdApplication.ProductServ.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<ElectrosLtdApplication.ProductServ.IProductService>, ElectrosLtdApplication.ProductServ.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Common.Product[] GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public Common.Product GetProductById(int id) {
            return base.Channel.GetProductById(id);
        }
        
        public void AddRate(Common.Rate rate) {
            base.Channel.AddRate(rate);
        }
        
        public Common.Rate[] GetAllRateOfProduct(int id) {
            return base.Channel.GetAllRateOfProduct(id);
        }
        
        public string AddProductForOrder(int productId, int qty, string username) {
            return base.Channel.AddProductForOrder(productId, qty, username);
        }
        
        public Common.Product[] GetByText(string text) {
            return base.Channel.GetByText(text);
        }
        
        public Common.Product[] GetByPriceRange(decimal to, decimal from) {
            return base.Channel.GetByPriceRange(to, from);
        }
        
        public Common.Product[] GetByDateListed(System.DateTime date) {
            return base.Channel.GetByDateListed(date);
        }
        
        public Common.Category[] GetAllCategory() {
            return base.Channel.GetAllCategory();
        }
    }
}
