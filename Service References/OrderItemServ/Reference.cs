//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElectrosLtdApplication.OrderItemServ {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderItemServ.IOrderItemService")]
    public interface IOrderItemService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderItemService/AddOrderItems", ReplyAction="http://tempuri.org/IOrderItemService/AddOrderItemsResponse")]
        void AddOrderItems(Common.OrderItem orderItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderItemService/UpdateOrderItem", ReplyAction="http://tempuri.org/IOrderItemService/UpdateOrderItemResponse")]
        void UpdateOrderItem(Common.OrderItem oi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderItemService/DeleteOrderItem", ReplyAction="http://tempuri.org/IOrderItemService/DeleteOrderItemResponse")]
        void DeleteOrderItem(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderItemService/GetOrderItemById", ReplyAction="http://tempuri.org/IOrderItemService/GetOrderItemByIdResponse")]
        Common.OrderItem GetOrderItemById(int orderItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderItemService/GetOrderItemByOrder", ReplyAction="http://tempuri.org/IOrderItemService/GetOrderItemByOrderResponse")]
        Common.OrderItem[] GetOrderItemByOrder(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderItemService/GetOrderItemByProductAndOrder", ReplyAction="http://tempuri.org/IOrderItemService/GetOrderItemByProductAndOrderResponse")]
        Common.OrderItem GetOrderItemByProductAndOrder(int productId, int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderItemService/GetOrderItemIfBought", ReplyAction="http://tempuri.org/IOrderItemService/GetOrderItemIfBoughtResponse")]
        bool GetOrderItemIfBought(int productId, int userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderItemServiceChannel : ElectrosLtdApplication.OrderItemServ.IOrderItemService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderItemServiceClient : System.ServiceModel.ClientBase<ElectrosLtdApplication.OrderItemServ.IOrderItemService>, ElectrosLtdApplication.OrderItemServ.IOrderItemService {
        
        public OrderItemServiceClient() {
        }
        
        public OrderItemServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderItemServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderItemServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderItemServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddOrderItems(Common.OrderItem orderItem) {
            base.Channel.AddOrderItems(orderItem);
        }
        
        public void UpdateOrderItem(Common.OrderItem oi) {
            base.Channel.UpdateOrderItem(oi);
        }
        
        public void DeleteOrderItem(int id) {
            base.Channel.DeleteOrderItem(id);
        }
        
        public Common.OrderItem GetOrderItemById(int orderItemId) {
            return base.Channel.GetOrderItemById(orderItemId);
        }
        
        public Common.OrderItem[] GetOrderItemByOrder(int orderId) {
            return base.Channel.GetOrderItemByOrder(orderId);
        }
        
        public Common.OrderItem GetOrderItemByProductAndOrder(int productId, int orderId) {
            return base.Channel.GetOrderItemByProductAndOrder(productId, orderId);
        }
        
        public bool GetOrderItemIfBought(int productId, int userId) {
            return base.Channel.GetOrderItemIfBought(productId, userId);
        }
    }
}
